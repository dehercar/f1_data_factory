{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "data-factory-david"
		},
		"linkToDavidStorageAccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkToDavidStorageAccount'"
		},
		"linkedServiceDavidDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'linkedServiceDavidDatabricks'"
		},
		"linkedServiceDavidDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0327-145736-3hxm142n"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/bronce_to_silver_parallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Read JSON",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Create Silver Schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "entitiesJson",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iiterate Entities",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Store JSON formated variables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities_to_run_arr')",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 13,
							"activities": [
								{
									"name": "Create Silver Table",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@concat('/Repos/davidhernandezmty@hotmail.com/exercises_nb/silver_transformations/',item(),'__silver') ",
											"type": "Expression"
										},
										"baseParameters": {
											"entity": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "linkedServiceDavidDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Store JSON formated variables",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Read JSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "entities_to_run_arr",
							"value": {
								"value": "@activity('Read JSON').output.value[0].entities",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create Silver Schema",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/davidhernandezmty@hotmail.com/exercises_nb/create_silver_schema"
						},
						"linkedServiceName": {
							"referenceName": "linkedServiceDavidDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"entities_to_run_arr": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-23T05:29:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/entitiesJson')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedServiceDavidDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_to_bronce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "inputCsv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "inputCsv",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "outputParquet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-23T05:29:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inputCsv')]",
				"[concat(variables('factoryId'), '/datasets/outputParquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/entitiesJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkToDavidStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "entities.json",
						"container": "entities"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"entities": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkToDavidStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkToDavidStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input-f1"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkToDavidStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkToDavidStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "bronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkToDavidStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkToDavidStorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "linkToDavidStorageAccount",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkToDavidStorageAccount_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedServiceDavidDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2160503414395715.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('linkedServiceDavidDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('linkedServiceDavidDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		}
	]
}